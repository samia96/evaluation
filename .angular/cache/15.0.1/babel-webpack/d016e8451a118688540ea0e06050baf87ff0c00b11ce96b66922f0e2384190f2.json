{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { AnimationFrame } from '@material/animation/animationframe';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar AnimationKeys;\n(function (AnimationKeys) {\n  AnimationKeys[\"POLL_SCROLL_POS\"] = \"poll_scroll_position\";\n  AnimationKeys[\"POLL_LAYOUT_CHANGE\"] = \"poll_layout_change\";\n})(AnimationKeys || (AnimationKeys = {}));\nvar MDCDialogFoundation = /** @class */function (_super) {\n  __extends(MDCDialogFoundation, _super);\n  function MDCDialogFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n    _this.dialogOpen = false;\n    _this.isFullscreen = false;\n    _this.animationFrame = 0;\n    _this.animationTimer = 0;\n    _this.escapeKeyAction = strings.CLOSE_ACTION;\n    _this.scrimClickAction = strings.CLOSE_ACTION;\n    _this.autoStackButtons = true;\n    _this.areButtonsStacked = false;\n    _this.suppressDefaultPressSelector = strings.SUPPRESS_DEFAULT_PRESS_SELECTOR;\n    _this.animFrame = new AnimationFrame();\n    _this.contentScrollHandler = function () {\n      _this.handleScrollEvent();\n    };\n    _this.windowResizeHandler = function () {\n      _this.layout();\n    };\n    _this.windowOrientationChangeHandler = function () {\n      _this.layout();\n    };\n    return _this;\n  }\n  Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addBodyClass: function () {\n          return undefined;\n        },\n        addClass: function () {\n          return undefined;\n        },\n        areButtonsStacked: function () {\n          return false;\n        },\n        clickDefaultButton: function () {\n          return undefined;\n        },\n        eventTargetMatches: function () {\n          return false;\n        },\n        getActionFromEvent: function () {\n          return '';\n        },\n        getInitialFocusEl: function () {\n          return null;\n        },\n        hasClass: function () {\n          return false;\n        },\n        isContentScrollable: function () {\n          return false;\n        },\n        notifyClosed: function () {\n          return undefined;\n        },\n        notifyClosing: function () {\n          return undefined;\n        },\n        notifyOpened: function () {\n          return undefined;\n        },\n        notifyOpening: function () {\n          return undefined;\n        },\n        releaseFocus: function () {\n          return undefined;\n        },\n        removeBodyClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        reverseButtons: function () {\n          return undefined;\n        },\n        trapFocus: function () {\n          return undefined;\n        },\n        registerContentEventHandler: function () {\n          return undefined;\n        },\n        deregisterContentEventHandler: function () {\n          return undefined;\n        },\n        isScrollableContentAtTop: function () {\n          return false;\n        },\n        isScrollableContentAtBottom: function () {\n          return false;\n        },\n        registerWindowEventHandler: function () {\n          return undefined;\n        },\n        deregisterWindowEventHandler: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MDCDialogFoundation.prototype.init = function () {\n    if (this.adapter.hasClass(cssClasses.STACKED)) {\n      this.setAutoStackButtons(false);\n    }\n    this.isFullscreen = this.adapter.hasClass(cssClasses.FULLSCREEN);\n  };\n  MDCDialogFoundation.prototype.destroy = function () {\n    if (this.animationTimer) {\n      clearTimeout(this.animationTimer);\n      this.handleAnimationTimerEnd();\n    }\n    if (this.isFullscreen) {\n      this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n    }\n    this.animFrame.cancelAll();\n    this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n  };\n  MDCDialogFoundation.prototype.open = function (dialogOptions) {\n    var _this = this;\n    this.dialogOpen = true;\n    this.adapter.notifyOpening();\n    this.adapter.addClass(cssClasses.OPENING);\n    if (this.isFullscreen) {\n      // A scroll event listener is registered even if the dialog is not\n      // scrollable on open, since the window resize event, or orientation\n      // change may make the dialog scrollable after it is opened.\n      this.adapter.registerContentEventHandler('scroll', this.contentScrollHandler);\n    }\n    if (dialogOptions && dialogOptions.isAboveFullscreenDialog) {\n      this.adapter.addClass(cssClasses.SCRIM_HIDDEN);\n    }\n    this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.registerWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    // Wait a frame once display is no longer \"none\", to establish basis for\n    // animation\n    this.runNextAnimationFrame(function () {\n      _this.adapter.addClass(cssClasses.OPEN);\n      if (!dialogOptions || !dialogOptions.isScrimless) {\n        _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n      }\n      _this.layout();\n      _this.animationTimer = setTimeout(function () {\n        _this.handleAnimationTimerEnd();\n        _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n        _this.adapter.notifyOpened();\n      }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n    });\n  };\n  MDCDialogFoundation.prototype.close = function (action) {\n    var _this = this;\n    if (action === void 0) {\n      action = '';\n    }\n    if (!this.dialogOpen) {\n      // Avoid redundant close calls (and events), e.g. from keydown on elements\n      // that inherently emit click\n      return;\n    }\n    this.dialogOpen = false;\n    this.adapter.notifyClosing(action);\n    this.adapter.addClass(cssClasses.CLOSING);\n    this.adapter.removeClass(cssClasses.OPEN);\n    this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n    if (this.isFullscreen) {\n      this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n    }\n    this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n    clearTimeout(this.animationTimer);\n    this.animationTimer = setTimeout(function () {\n      _this.adapter.releaseFocus();\n      _this.handleAnimationTimerEnd();\n      _this.adapter.notifyClosed(action);\n    }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n  };\n  /**\n   * Used only in instances of showing a secondary dialog over a full-screen\n   * dialog. Shows the \"surface scrim\" displayed over the full-screen dialog.\n   */\n  MDCDialogFoundation.prototype.showSurfaceScrim = function () {\n    var _this = this;\n    this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWING);\n    this.runNextAnimationFrame(function () {\n      _this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWN);\n    });\n  };\n  /**\n   * Used only in instances of showing a secondary dialog over a full-screen\n   * dialog. Hides the \"surface scrim\" displayed over the full-screen dialog.\n   */\n  MDCDialogFoundation.prototype.hideSurfaceScrim = function () {\n    this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWN);\n    this.adapter.addClass(cssClasses.SURFACE_SCRIM_HIDING);\n  };\n  /**\n   * Handles `transitionend` event triggered when surface scrim animation is\n   * finished.\n   */\n  MDCDialogFoundation.prototype.handleSurfaceScrimTransitionEnd = function () {\n    this.adapter.removeClass(cssClasses.SURFACE_SCRIM_HIDING);\n    this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWING);\n  };\n  MDCDialogFoundation.prototype.isOpen = function () {\n    return this.dialogOpen;\n  };\n  MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n    return this.escapeKeyAction;\n  };\n  MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n    this.escapeKeyAction = action;\n  };\n  MDCDialogFoundation.prototype.getScrimClickAction = function () {\n    return this.scrimClickAction;\n  };\n  MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n    this.scrimClickAction = action;\n  };\n  MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n    return this.autoStackButtons;\n  };\n  MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n    this.autoStackButtons = autoStack;\n  };\n  MDCDialogFoundation.prototype.getSuppressDefaultPressSelector = function () {\n    return this.suppressDefaultPressSelector;\n  };\n  MDCDialogFoundation.prototype.setSuppressDefaultPressSelector = function (selector) {\n    this.suppressDefaultPressSelector = selector;\n  };\n  MDCDialogFoundation.prototype.layout = function () {\n    var _this = this;\n    this.animFrame.request(AnimationKeys.POLL_LAYOUT_CHANGE, function () {\n      _this.layoutInternal();\n    });\n  };\n  /** Handles click on the dialog root element. */\n  MDCDialogFoundation.prototype.handleClick = function (evt) {\n    var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR);\n    // Check for scrim click first since it doesn't require querying ancestors.\n    if (isScrim && this.scrimClickAction !== '') {\n      this.close(this.scrimClickAction);\n    } else {\n      var action = this.adapter.getActionFromEvent(evt);\n      if (action) {\n        this.close(action);\n      }\n    }\n  };\n  /** Handles keydown on the dialog root element. */\n  MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n    var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    if (!isEnter) {\n      return;\n    }\n    var action = this.adapter.getActionFromEvent(evt);\n    if (action) {\n      // Action button callback is handled in `handleClick`,\n      // since space/enter keydowns on buttons trigger click events.\n      return;\n    }\n    // `composedPath` is used here, when available, to account for use cases\n    // where a target meant to suppress the default press behaviour\n    // may exist in a shadow root.\n    // For example, a textarea inside a web component:\n    // <mwc-dialog>\n    //   <horizontal-layout>\n    //     #shadow-root (open)\n    //       <mwc-textarea>\n    //         #shadow-root (open)\n    //           <textarea></textarea>\n    //       </mwc-textarea>\n    //   </horizontal-layout>\n    // </mwc-dialog>\n    var target = evt.composedPath ? evt.composedPath()[0] : evt.target;\n    var isDefault = this.suppressDefaultPressSelector ? !this.adapter.eventTargetMatches(target, this.suppressDefaultPressSelector) : true;\n    if (isEnter && isDefault) {\n      this.adapter.clickDefaultButton();\n    }\n  };\n  /** Handles keydown on the document. */\n  MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n    var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n    if (isEscape && this.escapeKeyAction !== '') {\n      this.close(this.escapeKeyAction);\n    }\n  };\n  /**\n   * Handles scroll event on the dialog's content element -- showing a scroll\n   * divider on the header or footer based on the scroll position. This handler\n   * should only be registered on full-screen dialogs with scrollable content.\n   */\n  MDCDialogFoundation.prototype.handleScrollEvent = function () {\n    var _this = this;\n    // Since scroll events can fire at a high rate, we throttle these events by\n    // using requestAnimationFrame.\n    this.animFrame.request(AnimationKeys.POLL_SCROLL_POS, function () {\n      _this.toggleScrollDividerHeader();\n      _this.toggleScrollDividerFooter();\n    });\n  };\n  MDCDialogFoundation.prototype.layoutInternal = function () {\n    if (this.autoStackButtons) {\n      this.detectStackedButtons();\n    }\n    this.toggleScrollableClasses();\n  };\n  MDCDialogFoundation.prototype.handleAnimationTimerEnd = function () {\n    this.animationTimer = 0;\n    this.adapter.removeClass(cssClasses.OPENING);\n    this.adapter.removeClass(cssClasses.CLOSING);\n  };\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to\n   * factor in Firefox reflow behavior.\n   */\n  MDCDialogFoundation.prototype.runNextAnimationFrame = function (callback) {\n    var _this = this;\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = requestAnimationFrame(function () {\n      _this.animationFrame = 0;\n      clearTimeout(_this.animationTimer);\n      _this.animationTimer = setTimeout(callback, 0);\n    });\n  };\n  MDCDialogFoundation.prototype.detectStackedButtons = function () {\n    // Remove the class first to let us measure the buttons' natural positions.\n    this.adapter.removeClass(cssClasses.STACKED);\n    var areButtonsStacked = this.adapter.areButtonsStacked();\n    if (areButtonsStacked) {\n      this.adapter.addClass(cssClasses.STACKED);\n    }\n    if (areButtonsStacked !== this.areButtonsStacked) {\n      this.adapter.reverseButtons();\n      this.areButtonsStacked = areButtonsStacked;\n    }\n  };\n  MDCDialogFoundation.prototype.toggleScrollableClasses = function () {\n    // Remove the class first to let us measure the natural height of the\n    // content.\n    this.adapter.removeClass(cssClasses.SCROLLABLE);\n    if (this.adapter.isContentScrollable()) {\n      this.adapter.addClass(cssClasses.SCROLLABLE);\n      if (this.isFullscreen) {\n        // If dialog is full-screen and scrollable, check if a scroll divider\n        // should be shown.\n        this.toggleScrollDividerHeader();\n        this.toggleScrollDividerFooter();\n      }\n    }\n  };\n  MDCDialogFoundation.prototype.toggleScrollDividerHeader = function () {\n    if (!this.adapter.isScrollableContentAtTop()) {\n      this.adapter.addClass(cssClasses.SCROLL_DIVIDER_HEADER);\n    } else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_HEADER)) {\n      this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_HEADER);\n    }\n  };\n  MDCDialogFoundation.prototype.toggleScrollDividerFooter = function () {\n    if (!this.adapter.isScrollableContentAtBottom()) {\n      this.adapter.addClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n    } else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_FOOTER)) {\n      this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n    }\n  };\n  return MDCDialogFoundation;\n}(MDCFoundation);\nexport { MDCDialogFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDialogFoundation;","map":{"version":3,"names":["__assign","__extends","AnimationFrame","MDCFoundation","cssClasses","numbers","strings","AnimationKeys","MDCDialogFoundation","_super","adapter","_this","call","defaultAdapter","dialogOpen","isFullscreen","animationFrame","animationTimer","escapeKeyAction","CLOSE_ACTION","scrimClickAction","autoStackButtons","areButtonsStacked","suppressDefaultPressSelector","SUPPRESS_DEFAULT_PRESS_SELECTOR","animFrame","contentScrollHandler","handleScrollEvent","windowResizeHandler","layout","windowOrientationChangeHandler","Object","defineProperty","get","enumerable","configurable","addBodyClass","undefined","addClass","clickDefaultButton","eventTargetMatches","getActionFromEvent","getInitialFocusEl","hasClass","isContentScrollable","notifyClosed","notifyClosing","notifyOpened","notifyOpening","releaseFocus","removeBodyClass","removeClass","reverseButtons","trapFocus","registerContentEventHandler","deregisterContentEventHandler","isScrollableContentAtTop","isScrollableContentAtBottom","registerWindowEventHandler","deregisterWindowEventHandler","prototype","init","STACKED","setAutoStackButtons","FULLSCREEN","destroy","clearTimeout","handleAnimationTimerEnd","cancelAll","open","dialogOptions","OPENING","isAboveFullscreenDialog","SCRIM_HIDDEN","runNextAnimationFrame","OPEN","isScrimless","SCROLL_LOCK","setTimeout","DIALOG_ANIMATION_OPEN_TIME_MS","close","action","CLOSING","cancelAnimationFrame","DIALOG_ANIMATION_CLOSE_TIME_MS","showSurfaceScrim","SURFACE_SCRIM_SHOWING","SURFACE_SCRIM_SHOWN","hideSurfaceScrim","SURFACE_SCRIM_HIDING","handleSurfaceScrimTransitionEnd","isOpen","getEscapeKeyAction","setEscapeKeyAction","getScrimClickAction","setScrimClickAction","getAutoStackButtons","autoStack","getSuppressDefaultPressSelector","setSuppressDefaultPressSelector","selector","request","POLL_LAYOUT_CHANGE","layoutInternal","handleClick","evt","isScrim","target","SCRIM_SELECTOR","handleKeydown","isEnter","key","keyCode","composedPath","isDefault","handleDocumentKeydown","isEscape","POLL_SCROLL_POS","toggleScrollDividerHeader","toggleScrollDividerFooter","detectStackedButtons","toggleScrollableClasses","callback","requestAnimationFrame","SCROLLABLE","SCROLL_DIVIDER_HEADER","SCROLL_DIVIDER_FOOTER"],"sources":["/Users/bassarouyacoubou/Desktop/projet tourisme/DEV/evaluation/node_modules/@material/dialog/foundation.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { AnimationFrame } from '@material/animation/animationframe';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar AnimationKeys;\n(function (AnimationKeys) {\n    AnimationKeys[\"POLL_SCROLL_POS\"] = \"poll_scroll_position\";\n    AnimationKeys[\"POLL_LAYOUT_CHANGE\"] = \"poll_layout_change\";\n})(AnimationKeys || (AnimationKeys = {}));\nvar MDCDialogFoundation = /** @class */ (function (_super) {\n    __extends(MDCDialogFoundation, _super);\n    function MDCDialogFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n        _this.dialogOpen = false;\n        _this.isFullscreen = false;\n        _this.animationFrame = 0;\n        _this.animationTimer = 0;\n        _this.escapeKeyAction = strings.CLOSE_ACTION;\n        _this.scrimClickAction = strings.CLOSE_ACTION;\n        _this.autoStackButtons = true;\n        _this.areButtonsStacked = false;\n        _this.suppressDefaultPressSelector = strings.SUPPRESS_DEFAULT_PRESS_SELECTOR;\n        _this.animFrame = new AnimationFrame();\n        _this.contentScrollHandler = function () {\n            _this.handleScrollEvent();\n        };\n        _this.windowResizeHandler = function () {\n            _this.layout();\n        };\n        _this.windowOrientationChangeHandler = function () {\n            _this.layout();\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addBodyClass: function () { return undefined; },\n                addClass: function () { return undefined; },\n                areButtonsStacked: function () { return false; },\n                clickDefaultButton: function () { return undefined; },\n                eventTargetMatches: function () { return false; },\n                getActionFromEvent: function () { return ''; },\n                getInitialFocusEl: function () { return null; },\n                hasClass: function () { return false; },\n                isContentScrollable: function () { return false; },\n                notifyClosed: function () { return undefined; },\n                notifyClosing: function () { return undefined; },\n                notifyOpened: function () { return undefined; },\n                notifyOpening: function () { return undefined; },\n                releaseFocus: function () { return undefined; },\n                removeBodyClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                reverseButtons: function () { return undefined; },\n                trapFocus: function () { return undefined; },\n                registerContentEventHandler: function () { return undefined; },\n                deregisterContentEventHandler: function () { return undefined; },\n                isScrollableContentAtTop: function () { return false; },\n                isScrollableContentAtBottom: function () { return false; },\n                registerWindowEventHandler: function () { return undefined; },\n                deregisterWindowEventHandler: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCDialogFoundation.prototype.init = function () {\n        if (this.adapter.hasClass(cssClasses.STACKED)) {\n            this.setAutoStackButtons(false);\n        }\n        this.isFullscreen = this.adapter.hasClass(cssClasses.FULLSCREEN);\n    };\n    MDCDialogFoundation.prototype.destroy = function () {\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.handleAnimationTimerEnd();\n        }\n        if (this.isFullscreen) {\n            this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        this.animFrame.cancelAll();\n        this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    };\n    MDCDialogFoundation.prototype.open = function (dialogOptions) {\n        var _this = this;\n        this.dialogOpen = true;\n        this.adapter.notifyOpening();\n        this.adapter.addClass(cssClasses.OPENING);\n        if (this.isFullscreen) {\n            // A scroll event listener is registered even if the dialog is not\n            // scrollable on open, since the window resize event, or orientation\n            // change may make the dialog scrollable after it is opened.\n            this.adapter.registerContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        if (dialogOptions && dialogOptions.isAboveFullscreenDialog) {\n            this.adapter.addClass(cssClasses.SCRIM_HIDDEN);\n        }\n        this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.registerWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n        // Wait a frame once display is no longer \"none\", to establish basis for\n        // animation\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(cssClasses.OPEN);\n            if (!dialogOptions || !dialogOptions.isScrimless) {\n                _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n            }\n            _this.layout();\n            _this.animationTimer = setTimeout(function () {\n                _this.handleAnimationTimerEnd();\n                _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n                _this.adapter.notifyOpened();\n            }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n        });\n    };\n    MDCDialogFoundation.prototype.close = function (action) {\n        var _this = this;\n        if (action === void 0) { action = ''; }\n        if (!this.dialogOpen) {\n            // Avoid redundant close calls (and events), e.g. from keydown on elements\n            // that inherently emit click\n            return;\n        }\n        this.dialogOpen = false;\n        this.adapter.notifyClosing(action);\n        this.adapter.addClass(cssClasses.CLOSING);\n        this.adapter.removeClass(cssClasses.OPEN);\n        this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n        if (this.isFullscreen) {\n            this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n        }\n        this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n        this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = 0;\n        clearTimeout(this.animationTimer);\n        this.animationTimer = setTimeout(function () {\n            _this.adapter.releaseFocus();\n            _this.handleAnimationTimerEnd();\n            _this.adapter.notifyClosed(action);\n        }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n    };\n    /**\n     * Used only in instances of showing a secondary dialog over a full-screen\n     * dialog. Shows the \"surface scrim\" displayed over the full-screen dialog.\n     */\n    MDCDialogFoundation.prototype.showSurfaceScrim = function () {\n        var _this = this;\n        this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWING);\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(cssClasses.SURFACE_SCRIM_SHOWN);\n        });\n    };\n    /**\n     * Used only in instances of showing a secondary dialog over a full-screen\n     * dialog. Hides the \"surface scrim\" displayed over the full-screen dialog.\n     */\n    MDCDialogFoundation.prototype.hideSurfaceScrim = function () {\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWN);\n        this.adapter.addClass(cssClasses.SURFACE_SCRIM_HIDING);\n    };\n    /**\n     * Handles `transitionend` event triggered when surface scrim animation is\n     * finished.\n     */\n    MDCDialogFoundation.prototype.handleSurfaceScrimTransitionEnd = function () {\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_HIDING);\n        this.adapter.removeClass(cssClasses.SURFACE_SCRIM_SHOWING);\n    };\n    MDCDialogFoundation.prototype.isOpen = function () {\n        return this.dialogOpen;\n    };\n    MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n        return this.escapeKeyAction;\n    };\n    MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n        this.escapeKeyAction = action;\n    };\n    MDCDialogFoundation.prototype.getScrimClickAction = function () {\n        return this.scrimClickAction;\n    };\n    MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n        this.scrimClickAction = action;\n    };\n    MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n        return this.autoStackButtons;\n    };\n    MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n        this.autoStackButtons = autoStack;\n    };\n    MDCDialogFoundation.prototype.getSuppressDefaultPressSelector = function () {\n        return this.suppressDefaultPressSelector;\n    };\n    MDCDialogFoundation.prototype.setSuppressDefaultPressSelector = function (selector) {\n        this.suppressDefaultPressSelector = selector;\n    };\n    MDCDialogFoundation.prototype.layout = function () {\n        var _this = this;\n        this.animFrame.request(AnimationKeys.POLL_LAYOUT_CHANGE, function () {\n            _this.layoutInternal();\n        });\n    };\n    /** Handles click on the dialog root element. */\n    MDCDialogFoundation.prototype.handleClick = function (evt) {\n        var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR);\n        // Check for scrim click first since it doesn't require querying ancestors.\n        if (isScrim && this.scrimClickAction !== '') {\n            this.close(this.scrimClickAction);\n        }\n        else {\n            var action = this.adapter.getActionFromEvent(evt);\n            if (action) {\n                this.close(action);\n            }\n        }\n    };\n    /** Handles keydown on the dialog root element. */\n    MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n        var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n        if (!isEnter) {\n            return;\n        }\n        var action = this.adapter.getActionFromEvent(evt);\n        if (action) {\n            // Action button callback is handled in `handleClick`,\n            // since space/enter keydowns on buttons trigger click events.\n            return;\n        }\n        // `composedPath` is used here, when available, to account for use cases\n        // where a target meant to suppress the default press behaviour\n        // may exist in a shadow root.\n        // For example, a textarea inside a web component:\n        // <mwc-dialog>\n        //   <horizontal-layout>\n        //     #shadow-root (open)\n        //       <mwc-textarea>\n        //         #shadow-root (open)\n        //           <textarea></textarea>\n        //       </mwc-textarea>\n        //   </horizontal-layout>\n        // </mwc-dialog>\n        var target = evt.composedPath ? evt.composedPath()[0] : evt.target;\n        var isDefault = this.suppressDefaultPressSelector ?\n            !this.adapter.eventTargetMatches(target, this.suppressDefaultPressSelector) :\n            true;\n        if (isEnter && isDefault) {\n            this.adapter.clickDefaultButton();\n        }\n    };\n    /** Handles keydown on the document. */\n    MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n        var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n        if (isEscape && this.escapeKeyAction !== '') {\n            this.close(this.escapeKeyAction);\n        }\n    };\n    /**\n     * Handles scroll event on the dialog's content element -- showing a scroll\n     * divider on the header or footer based on the scroll position. This handler\n     * should only be registered on full-screen dialogs with scrollable content.\n     */\n    MDCDialogFoundation.prototype.handleScrollEvent = function () {\n        var _this = this;\n        // Since scroll events can fire at a high rate, we throttle these events by\n        // using requestAnimationFrame.\n        this.animFrame.request(AnimationKeys.POLL_SCROLL_POS, function () {\n            _this.toggleScrollDividerHeader();\n            _this.toggleScrollDividerFooter();\n        });\n    };\n    MDCDialogFoundation.prototype.layoutInternal = function () {\n        if (this.autoStackButtons) {\n            this.detectStackedButtons();\n        }\n        this.toggleScrollableClasses();\n    };\n    MDCDialogFoundation.prototype.handleAnimationTimerEnd = function () {\n        this.animationTimer = 0;\n        this.adapter.removeClass(cssClasses.OPENING);\n        this.adapter.removeClass(cssClasses.CLOSING);\n    };\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to\n     * factor in Firefox reflow behavior.\n     */\n    MDCDialogFoundation.prototype.runNextAnimationFrame = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = requestAnimationFrame(function () {\n            _this.animationFrame = 0;\n            clearTimeout(_this.animationTimer);\n            _this.animationTimer = setTimeout(callback, 0);\n        });\n    };\n    MDCDialogFoundation.prototype.detectStackedButtons = function () {\n        // Remove the class first to let us measure the buttons' natural positions.\n        this.adapter.removeClass(cssClasses.STACKED);\n        var areButtonsStacked = this.adapter.areButtonsStacked();\n        if (areButtonsStacked) {\n            this.adapter.addClass(cssClasses.STACKED);\n        }\n        if (areButtonsStacked !== this.areButtonsStacked) {\n            this.adapter.reverseButtons();\n            this.areButtonsStacked = areButtonsStacked;\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollableClasses = function () {\n        // Remove the class first to let us measure the natural height of the\n        // content.\n        this.adapter.removeClass(cssClasses.SCROLLABLE);\n        if (this.adapter.isContentScrollable()) {\n            this.adapter.addClass(cssClasses.SCROLLABLE);\n            if (this.isFullscreen) {\n                // If dialog is full-screen and scrollable, check if a scroll divider\n                // should be shown.\n                this.toggleScrollDividerHeader();\n                this.toggleScrollDividerFooter();\n            }\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollDividerHeader = function () {\n        if (!this.adapter.isScrollableContentAtTop()) {\n            this.adapter.addClass(cssClasses.SCROLL_DIVIDER_HEADER);\n        }\n        else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_HEADER)) {\n            this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_HEADER);\n        }\n    };\n    MDCDialogFoundation.prototype.toggleScrollDividerFooter = function () {\n        if (!this.adapter.isScrollableContentAtBottom()) {\n            this.adapter.addClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n        }\n        else if (this.adapter.hasClass(cssClasses.SCROLL_DIVIDER_FOOTER)) {\n            this.adapter.removeClass(cssClasses.SCROLL_DIVIDER_FOOTER);\n        }\n    };\n    return MDCDialogFoundation;\n}(MDCFoundation));\nexport { MDCDialogFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDialogFoundation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
